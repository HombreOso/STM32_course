//nucleo-f446ze

// Where is the LED connected?
// Port:	B
// Pin:		7
// page 24 User Guide

#define PERIPH_BASE			(0x40000000UL)  /*page 69 Data sheet*/

#define AHB1_PERIPH_OFFSET 	(0x00020000UL) /*page 67 Data sheet*/
#define AHB1_PERIPH_BASE 	(PERIPH_BASE + AHB1_PERIPH_OFFSET)

#define GPIOB_OFFSET		(0x0400U) /*page 67 Data sheet*/
#define GPIOB_BASE			(AHB1_PERIPH_BASE + GPIOA_OFFSET)

#define RCC_OFFSET			(0x3800UL) /*page 67 Data sheet*/
#define RCC_BASE			(AHB1_PERIPH_BASE + RCC_OFFSET)

#define AHB1EN_R_OFFSET		(0x30UL) /*page 144 Reference Manual*/
#define RCC_AHB1ENR		(*(volatile unsigned int *)(RCC_BASE + AHB1EN_R_OFFSET))

#define GPIOBEN				(1U<<1) /*page 145 Reference Manual*/

#define MODE_R_OFFSET		(0x00UL) /*page 187 Reference Manual, mode register*/
#define GPIOB_MODER		(*(volatile unsigned int *)(GPIOB_BASE + MODE_R_OFFSET))

#define ODR_OFFSET			(0x14UL) /*page 190 Reference Manual*/
#define GPIOB_ODR			(*(volatile unsigned int *)(GPIOB_BASE + ODR_OFFSET))

#define PIN5				(1U<<5) /*page 190 Reference Manual*/
#define LED_PIN				PIN5


int main(void)
{
	/*1. Enable clock access to GPIOA*/
	RCC_AHB1ENR |= GPIOBEN;

	/*2. Set PA5 as output pin*/
	GPIOB_MODER |= (1U<<10);
	GPIOB_MODER &= ~(1U<<11);

	// infinite loop
	while(1)
	{
		/*3. Set PA5 high*/
		GPIOB_ODR |= LED_PIN;

		/*4. Experiment 2: toggle PA5*/
		//GPIOA_OD_R ^= LED_PIN;

		//delay
		//for(int i=0; i<100; i++){}
	}
}
